<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UE5-materials on Petfactory</title>
    <link>https://www.petfactory.se/tags/ue5-materials/</link>
    <description>Recent content in UE5-materials on Petfactory</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Jul 2022 22:03:02 +0200</lastBuildDate>
    
	<atom:link href="https://www.petfactory.se/tags/ue5-materials/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>UE5 - Materials</title>
      <link>https://www.petfactory.se/notes/ue5-materials/</link>
      <pubDate>Sun, 17 Jul 2022 22:03:02 +0200</pubDate>
      
      <guid>https://www.petfactory.se/notes/ue5-materials/</guid>
      <description>Layered material  Create a Layered Material  Create a Material (just a standard material)  Lets call it M_layered   Open up the material Set the material to use Material Attributes  Material &amp;gt; Use Material Attributes : Enabled   Create a Material Attributes Layers node  Connect the output (of the Material Attributes Layers) to the input of the material result node     Create a Material Layer  RMB click &amp;gt; Material &amp;gt; Layers &amp;gt; Material Layer Lets call it ML_vertex_color On the Set Material Attributes add 5 attributes  Click the + button and add:  BaseColor Metallic Specular Roughness Normal     Create your material setup and connect to the PBR attribute inputs we just created  in our test case we will expose the Base Color so that we can set the color with a vector parameter     Create a Material Layer Blend  RMB click &amp;gt; Material &amp;gt; Layers &amp;gt; Material Layer Blend Lets call it MLB_vertex_color Lets add functionality for the user to use vertex colors and ability to select which channel to use  Create a Vertex Color node Create a Append Vector node  Connect the RGB output (the top white outout) from the vertex color node to the A input of the Append node Connect the Alpha (at the bottom) output to the B input of the append node We do this since we want the ability to choose RGBA in the channel mask parameter   Create a Channel Mask Parameter node  Name the parameter Vertex Color Channel Connect the output of the append node to the input of the channel mask parameter node   Connect the output of the channel mask parameter node to the Alpha input of the Blend Matwerial Attributes node     Create a Layered Material  Create the Layered material Instance  Create a Material Instance of the M_layered material Call it MI_layered Open it up In the Layers Parameter tab you can see the layers  If it is not visible, Window &amp;gt; Layer Parameters   On the + button next to the Material Layers click to add as many layers as you need  In this example we will add 3 layers     Add layer instances  Create Material Layer instances  RMB click on the Material Layer &amp;gt; Create Layer Instance   In our example we will create 3 layers, &amp;ldquo;red, green and blue&amp;rdquo;  Call the instances MLI_red, MLI_green and MLI_blue Change the Base Color so they reflect the names   Drag and drop the material layer instances on the slots in the MI_layered Material instance   Add blend assets  If you have more than one layer (which you will) then you will see an input called Blend Assets This controls how the material layers blend Create an instance of the Material Layer Blend asset Call it &amp;ldquo;MLBI_vertex_color&amp;rdquo; Drag and drop the asset on the Blend Asset in the layered material (MI_layered) Expand the properties and set the and set which vertex color channel that should be sued for each layer   Done!</description>
    </item>
    
  </channel>
</rss>