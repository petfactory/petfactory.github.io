<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VEX on Petfactory</title>
    <link>https://www.petfactory.se/tags/vex/</link>
    <description>Recent content in VEX on Petfactory</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Apr 2019 13:45:10 +0100</lastBuildDate>
    
	<atom:link href="https://www.petfactory.se/tags/vex/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Houdini VEX - Snippets</title>
      <link>https://www.petfactory.se/notes/houdini_vex/</link>
      <pubDate>Sun, 14 Apr 2019 13:45:10 +0100</pubDate>
      
      <guid>https://www.petfactory.se/notes/houdini_vex/</guid>
      <description>General Array of Unique (detail) int nprim = nprimitives(0);s[]@mat_names = {};int count = nuniqueval(0, &amp;#34;prim&amp;#34;, &amp;#34;shop_materialpath&amp;#34;);for (int i = 0; i &amp;lt; count; i++) {string val = uniqueval(0, &amp;#34;prim&amp;#34;, &amp;#34;shop_materialpath&amp;#34;, i);push(s[]@mat_names, val);}Transform We have control over the distribution of various sizes (bias), the size over life (note that we use the internal @nage i.e. normalized age an attr that comes by default when we do a popsim), min and max scale as well as an overall multiplier.</description>
    </item>
    
  </channel>
</rss>