<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Petfactory</title>
    <link>https://www.petfactory.se/tags/python/</link>
    <description>Recent content in Python on Petfactory</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Sep 2021 11:18:51 +0200</lastBuildDate>
    
	<atom:link href="https://www.petfactory.se/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OCIO - Python</title>
      <link>https://www.petfactory.se/notes/ocio_python/</link>
      <pubDate>Tue, 21 Sep 2021 11:18:51 +0200</pubDate>
      
      <guid>https://www.petfactory.se/notes/ocio_python/</guid>
      <description>I am writing a tool for Houdini that can create, save and apply color themes to color ramp parameters. In this project I needed to convert between color spaces. There are many ways to do this, but this led me to start exploring OCIO using Python. Below is a snippet that changes the color space of a list of rgb values from srgb to linear srgb.
 First I activate the venv into which I want to install OCIO Then I run pip install opencolorio With the package installed make sure that your IDE can access the package We also need to download a OCIO configuration file from here  import osimport PyOpenColorIO as OCIOdef apply_rgb(rgb, src_space, dst_space):try:config = OCIO.</description>
    </item>
    
    <item>
      <title>Unreal - Python / PySide2</title>
      <link>https://www.petfactory.se/notes/unreal_python_pyside2/</link>
      <pubDate>Wed, 06 Jan 2021 15:03:19 +0100</pubDate>
      
      <guid>https://www.petfactory.se/notes/unreal_python_pyside2/</guid>
      <description>Enable Python Enable the plugins you wish to use. There might be more scripting modules under the scripting tab depending on what you have installed and what you wish to be able to modify with python.
 Edit &amp;gt; Plugins &amp;gt; Scripting &amp;gt;  Python Editor Script Plugin : Enable    Optionally we can also enable developer mode (on a per project basis). This will wnable extra warnings eg for deprecated code.</description>
    </item>
    
    <item>
      <title>Davinci Resolve - Python</title>
      <link>https://www.petfactory.se/notes/davinci_resolve_python/</link>
      <pubDate>Wed, 20 Nov 2019 14:11:00 +0100</pubDate>
      
      <guid>https://www.petfactory.se/notes/davinci_resolve_python/</guid>
      <description>An old scripting guide can be found here
Python &amp;amp; Lua Historically FusionScript was Lua only, some methods that return multiple statements have a special Table() suffix variant to return the proper table for use in Python. As the Lua collection is a tuple, you will need to pass a dictionary to the API in many cases, even when it seems to be treated like a list. So each Value needs to have a key in the order of the entry.</description>
    </item>
    
    <item>
      <title>Houdini - Python Snippets</title>
      <link>https://www.petfactory.se/notes/houdini_python_snippets/</link>
      <pubDate>Mon, 15 Apr 2019 13:45:10 +0100</pubDate>
      
      <guid>https://www.petfactory.se/notes/houdini_python_snippets/</guid>
      <description>String Regex Replace import reREGEX_TRAILING_DIGITS = re.compile(r&amp;#39;^([a-zA-Z_]*?)[0-9]*$&amp;#39;)node = hou.pwd()geo = node.geometry()for prim in geo.prims():mat_name = prim.attribValue(&amp;#39;shop_materialpath&amp;#39;)m = REGEX_TRAILING_DIGITS.match(mat_name)if m:capt_grp = m.groups()[0]prim.setAttribValue(&amp;#39;shop_materialpath&amp;#39;, capt_grp) Parms Add Button Add a button to a cop network that when it is pressed will render a child node called &amp;ldquo;rop_cop1&amp;rdquo;. It seems that the commented out line is not necessary? Seems to do the same as the 2 lines above.</description>
    </item>
    
    <item>
      <title>Flask SQLite dev</title>
      <link>https://www.petfactory.se/notes/flask_sqlite_dev/</link>
      <pubDate>Wed, 02 Jan 2019 11:16:20 +0200</pubDate>
      
      <guid>https://www.petfactory.se/notes/flask_sqlite_dev/</guid>
      <description>The database will contain materials, material types and surface properties.
  Material
 id name material type surface properties    Material type
 id name    Surface property
 id name     Installation create a project dir an cd into it.
create an environment
OSX python3 -m venv venvActivate the environment
. venv/bin/activateinstall flask
pip install FlaskThere is a regular SQLAlchemy package but flask-sqlalchemy is a flask specific extension that provides some useful defaults and helpers for flask.</description>
    </item>
    
    <item>
      <title>Tile Editor</title>
      <link>https://www.petfactory.se/notes/tile_editor/</link>
      <pubDate>Tue, 01 Jan 2019 20:31:44 +0100</pubDate>
      
      <guid>https://www.petfactory.se/notes/tile_editor/</guid>
      <description>The Tile Editor is a tool I am developing that creates tile based city blocks (houses and streets, props etc). The project started inside Maya but I have since then moved to Houdini. The gist of the tool: you have an PySide widget in which you can paint the shape of the buildings, change tile appearance and assign geometry. The tool then generates points and attributes to which geometry is instanced.</description>
    </item>
    
    <item>
      <title>PySide2 - Notes</title>
      <link>https://www.petfactory.se/notes/pyside2/</link>
      <pubDate>Sat, 17 Mar 2018 11:16:20 +0200</pubDate>
      
      <guid>https://www.petfactory.se/notes/pyside2/</guid>
      <description>Pyside2 Install PySide2 To install PySide2 (including Shiboken2 &amp;amp; Qt) make sure that we first activate our venv
pip install PySide2Hello World app Lets build a simple ui and run with sublimeText. Select the build system we just created and build Ctrl B
from PySide2 import QtCorefrom PySide2 import QtWidgetsfrom PySide2 import QtGuiimport sysfrom functools import partialclass HelloWidget(QtWidgets.QWidget):def __init__(self, parent=None):super(HelloWidget, self).__init__(parent)self.setGeometry(400, 400, 250, 50)self.</description>
    </item>
    
    <item>
      <title>Python - General</title>
      <link>https://www.petfactory.se/notes/python/</link>
      <pubDate>Sat, 14 Oct 2017 11:16:20 +0200</pubDate>
      
      <guid>https://www.petfactory.se/notes/python/</guid>
      <description>This assumes you are using Python 3. (I am also using Git Bash as my shell)
Venv Setup a virtual environment It is a good idea to install packages in virtual environment so that we do not clutter our main python install, and we can easily get rid of the packages if we want. First we need to create the virtual enveronment. Navigat to a folder where you want your venv and type cd into it and then run:</description>
    </item>
    
  </channel>
</rss>